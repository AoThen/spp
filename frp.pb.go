// Code generated by protoc-gen-go. DO NOT EDIT.
// source: frp.proto

package main

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SrpFrame_TYPE int32

const (
	SrpFrame_LOGIN    SrpFrame_TYPE = 0
	SrpFrame_LOGINRSP SrpFrame_TYPE = 1
	SrpFrame_DATA     SrpFrame_TYPE = 2
	SrpFrame_PING     SrpFrame_TYPE = 3
	SrpFrame_PONG     SrpFrame_TYPE = 4
	SrpFrame_OPEN     SrpFrame_TYPE = 5
	SrpFrame_OPENRSP  SrpFrame_TYPE = 6
	SrpFrame_CLOSE    SrpFrame_TYPE = 7
)

var SrpFrame_TYPE_name = map[int32]string{
	0: "LOGIN",
	1: "LOGINRSP",
	2: "DATA",
	3: "PING",
	4: "PONG",
	5: "OPEN",
	6: "OPENRSP",
	7: "CLOSE",
}

var SrpFrame_TYPE_value = map[string]int32{
	"LOGIN":    0,
	"LOGINRSP": 1,
	"DATA":     2,
	"PING":     3,
	"PONG":     4,
	"OPEN":     5,
	"OPENRSP":  6,
	"CLOSE":    7,
}

func (x SrpFrame_TYPE) String() string {
	return proto.EnumName(SrpFrame_TYPE_name, int32(x))
}

func (SrpFrame_TYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d316925312aba732, []int{8, 0}
}

type SrpLoginFrame struct {
	Remote               string   `protobuf:"bytes,1,opt,name=remote,proto3" json:"remote,omitempty"`
	Compress             int32    `protobuf:"varint,2,opt,name=compress,proto3" json:"compress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrpLoginFrame) Reset()         { *m = SrpLoginFrame{} }
func (m *SrpLoginFrame) String() string { return proto.CompactTextString(m) }
func (*SrpLoginFrame) ProtoMessage()    {}
func (*SrpLoginFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_d316925312aba732, []int{0}
}

func (m *SrpLoginFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpLoginFrame.Unmarshal(m, b)
}
func (m *SrpLoginFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpLoginFrame.Marshal(b, m, deterministic)
}
func (m *SrpLoginFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpLoginFrame.Merge(m, src)
}
func (m *SrpLoginFrame) XXX_Size() int {
	return xxx_messageInfo_SrpLoginFrame.Size(m)
}
func (m *SrpLoginFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpLoginFrame.DiscardUnknown(m)
}

var xxx_messageInfo_SrpLoginFrame proto.InternalMessageInfo

func (m *SrpLoginFrame) GetRemote() string {
	if m != nil {
		return m.Remote
	}
	return ""
}

func (m *SrpLoginFrame) GetCompress() int32 {
	if m != nil {
		return m.Compress
	}
	return 0
}

type SrpLoginRspFrame struct {
	Ret                  bool     `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrpLoginRspFrame) Reset()         { *m = SrpLoginRspFrame{} }
func (m *SrpLoginRspFrame) String() string { return proto.CompactTextString(m) }
func (*SrpLoginRspFrame) ProtoMessage()    {}
func (*SrpLoginRspFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_d316925312aba732, []int{1}
}

func (m *SrpLoginRspFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpLoginRspFrame.Unmarshal(m, b)
}
func (m *SrpLoginRspFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpLoginRspFrame.Marshal(b, m, deterministic)
}
func (m *SrpLoginRspFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpLoginRspFrame.Merge(m, src)
}
func (m *SrpLoginRspFrame) XXX_Size() int {
	return xxx_messageInfo_SrpLoginRspFrame.Size(m)
}
func (m *SrpLoginRspFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpLoginRspFrame.DiscardUnknown(m)
}

var xxx_messageInfo_SrpLoginRspFrame proto.InternalMessageInfo

func (m *SrpLoginRspFrame) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

func (m *SrpLoginRspFrame) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type SrpPingFrame struct {
	Time                 int64    `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrpPingFrame) Reset()         { *m = SrpPingFrame{} }
func (m *SrpPingFrame) String() string { return proto.CompactTextString(m) }
func (*SrpPingFrame) ProtoMessage()    {}
func (*SrpPingFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_d316925312aba732, []int{2}
}

func (m *SrpPingFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpPingFrame.Unmarshal(m, b)
}
func (m *SrpPingFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpPingFrame.Marshal(b, m, deterministic)
}
func (m *SrpPingFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpPingFrame.Merge(m, src)
}
func (m *SrpPingFrame) XXX_Size() int {
	return xxx_messageInfo_SrpPingFrame.Size(m)
}
func (m *SrpPingFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpPingFrame.DiscardUnknown(m)
}

var xxx_messageInfo_SrpPingFrame proto.InternalMessageInfo

func (m *SrpPingFrame) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type SrpPongFrame struct {
	Time                 int64    `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrpPongFrame) Reset()         { *m = SrpPongFrame{} }
func (m *SrpPongFrame) String() string { return proto.CompactTextString(m) }
func (*SrpPongFrame) ProtoMessage()    {}
func (*SrpPongFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_d316925312aba732, []int{3}
}

func (m *SrpPongFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpPongFrame.Unmarshal(m, b)
}
func (m *SrpPongFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpPongFrame.Marshal(b, m, deterministic)
}
func (m *SrpPongFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpPongFrame.Merge(m, src)
}
func (m *SrpPongFrame) XXX_Size() int {
	return xxx_messageInfo_SrpPongFrame.Size(m)
}
func (m *SrpPongFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpPongFrame.DiscardUnknown(m)
}

var xxx_messageInfo_SrpPongFrame proto.InternalMessageInfo

func (m *SrpPongFrame) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type SrpOpenFrame struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrpOpenFrame) Reset()         { *m = SrpOpenFrame{} }
func (m *SrpOpenFrame) String() string { return proto.CompactTextString(m) }
func (*SrpOpenFrame) ProtoMessage()    {}
func (*SrpOpenFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_d316925312aba732, []int{4}
}

func (m *SrpOpenFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpOpenFrame.Unmarshal(m, b)
}
func (m *SrpOpenFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpOpenFrame.Marshal(b, m, deterministic)
}
func (m *SrpOpenFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpOpenFrame.Merge(m, src)
}
func (m *SrpOpenFrame) XXX_Size() int {
	return xxx_messageInfo_SrpOpenFrame.Size(m)
}
func (m *SrpOpenFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpOpenFrame.DiscardUnknown(m)
}

var xxx_messageInfo_SrpOpenFrame proto.InternalMessageInfo

func (m *SrpOpenFrame) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SrpOpenRspFrame struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ret                  bool     `protobuf:"varint,2,opt,name=ret,proto3" json:"ret,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrpOpenRspFrame) Reset()         { *m = SrpOpenRspFrame{} }
func (m *SrpOpenRspFrame) String() string { return proto.CompactTextString(m) }
func (*SrpOpenRspFrame) ProtoMessage()    {}
func (*SrpOpenRspFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_d316925312aba732, []int{5}
}

func (m *SrpOpenRspFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpOpenRspFrame.Unmarshal(m, b)
}
func (m *SrpOpenRspFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpOpenRspFrame.Marshal(b, m, deterministic)
}
func (m *SrpOpenRspFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpOpenRspFrame.Merge(m, src)
}
func (m *SrpOpenRspFrame) XXX_Size() int {
	return xxx_messageInfo_SrpOpenRspFrame.Size(m)
}
func (m *SrpOpenRspFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpOpenRspFrame.DiscardUnknown(m)
}

var xxx_messageInfo_SrpOpenRspFrame proto.InternalMessageInfo

func (m *SrpOpenRspFrame) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SrpOpenRspFrame) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

func (m *SrpOpenRspFrame) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type SrpCloseFrame struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrpCloseFrame) Reset()         { *m = SrpCloseFrame{} }
func (m *SrpCloseFrame) String() string { return proto.CompactTextString(m) }
func (*SrpCloseFrame) ProtoMessage()    {}
func (*SrpCloseFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_d316925312aba732, []int{6}
}

func (m *SrpCloseFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpCloseFrame.Unmarshal(m, b)
}
func (m *SrpCloseFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpCloseFrame.Marshal(b, m, deterministic)
}
func (m *SrpCloseFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpCloseFrame.Merge(m, src)
}
func (m *SrpCloseFrame) XXX_Size() int {
	return xxx_messageInfo_SrpCloseFrame.Size(m)
}
func (m *SrpCloseFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpCloseFrame.DiscardUnknown(m)
}

var xxx_messageInfo_SrpCloseFrame proto.InternalMessageInfo

func (m *SrpCloseFrame) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SrpDataFrame struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Compress             bool     `protobuf:"varint,2,opt,name=compress,proto3" json:"compress,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrpDataFrame) Reset()         { *m = SrpDataFrame{} }
func (m *SrpDataFrame) String() string { return proto.CompactTextString(m) }
func (*SrpDataFrame) ProtoMessage()    {}
func (*SrpDataFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_d316925312aba732, []int{7}
}

func (m *SrpDataFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpDataFrame.Unmarshal(m, b)
}
func (m *SrpDataFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpDataFrame.Marshal(b, m, deterministic)
}
func (m *SrpDataFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpDataFrame.Merge(m, src)
}
func (m *SrpDataFrame) XXX_Size() int {
	return xxx_messageInfo_SrpDataFrame.Size(m)
}
func (m *SrpDataFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpDataFrame.DiscardUnknown(m)
}

var xxx_messageInfo_SrpDataFrame proto.InternalMessageInfo

func (m *SrpDataFrame) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SrpDataFrame) GetCompress() bool {
	if m != nil {
		return m.Compress
	}
	return false
}

func (m *SrpDataFrame) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SrpFrame struct {
	Type                 SrpFrame_TYPE     `protobuf:"varint,1,opt,name=type,proto3,enum=SrpFrame_TYPE" json:"type,omitempty"`
	LoginFrame           *SrpLoginFrame    `protobuf:"bytes,2,opt,name=loginFrame,proto3" json:"loginFrame,omitempty"`
	LoginRspFrame        *SrpLoginRspFrame `protobuf:"bytes,3,opt,name=loginRspFrame,proto3" json:"loginRspFrame,omitempty"`
	DataFrame            *SrpDataFrame     `protobuf:"bytes,4,opt,name=dataFrame,proto3" json:"dataFrame,omitempty"`
	PingFrame            *SrpPingFrame     `protobuf:"bytes,5,opt,name=pingFrame,proto3" json:"pingFrame,omitempty"`
	PongFrame            *SrpPongFrame     `protobuf:"bytes,6,opt,name=pongFrame,proto3" json:"pongFrame,omitempty"`
	OpenFrame            *SrpOpenFrame     `protobuf:"bytes,7,opt,name=openFrame,proto3" json:"openFrame,omitempty"`
	OpenRspFrame         *SrpOpenRspFrame  `protobuf:"bytes,8,opt,name=openRspFrame,proto3" json:"openRspFrame,omitempty"`
	CloseFrame           *SrpCloseFrame    `protobuf:"bytes,9,opt,name=closeFrame,proto3" json:"closeFrame,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SrpFrame) Reset()         { *m = SrpFrame{} }
func (m *SrpFrame) String() string { return proto.CompactTextString(m) }
func (*SrpFrame) ProtoMessage()    {}
func (*SrpFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_d316925312aba732, []int{8}
}

func (m *SrpFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpFrame.Unmarshal(m, b)
}
func (m *SrpFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpFrame.Marshal(b, m, deterministic)
}
func (m *SrpFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpFrame.Merge(m, src)
}
func (m *SrpFrame) XXX_Size() int {
	return xxx_messageInfo_SrpFrame.Size(m)
}
func (m *SrpFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpFrame.DiscardUnknown(m)
}

var xxx_messageInfo_SrpFrame proto.InternalMessageInfo

func (m *SrpFrame) GetType() SrpFrame_TYPE {
	if m != nil {
		return m.Type
	}
	return SrpFrame_LOGIN
}

func (m *SrpFrame) GetLoginFrame() *SrpLoginFrame {
	if m != nil {
		return m.LoginFrame
	}
	return nil
}

func (m *SrpFrame) GetLoginRspFrame() *SrpLoginRspFrame {
	if m != nil {
		return m.LoginRspFrame
	}
	return nil
}

func (m *SrpFrame) GetDataFrame() *SrpDataFrame {
	if m != nil {
		return m.DataFrame
	}
	return nil
}

func (m *SrpFrame) GetPingFrame() *SrpPingFrame {
	if m != nil {
		return m.PingFrame
	}
	return nil
}

func (m *SrpFrame) GetPongFrame() *SrpPongFrame {
	if m != nil {
		return m.PongFrame
	}
	return nil
}

func (m *SrpFrame) GetOpenFrame() *SrpOpenFrame {
	if m != nil {
		return m.OpenFrame
	}
	return nil
}

func (m *SrpFrame) GetOpenRspFrame() *SrpOpenRspFrame {
	if m != nil {
		return m.OpenRspFrame
	}
	return nil
}

func (m *SrpFrame) GetCloseFrame() *SrpCloseFrame {
	if m != nil {
		return m.CloseFrame
	}
	return nil
}

func init() {
	proto.RegisterEnum("SrpFrame_TYPE", SrpFrame_TYPE_name, SrpFrame_TYPE_value)
	proto.RegisterType((*SrpLoginFrame)(nil), "SrpLoginFrame")
	proto.RegisterType((*SrpLoginRspFrame)(nil), "SrpLoginRspFrame")
	proto.RegisterType((*SrpPingFrame)(nil), "SrpPingFrame")
	proto.RegisterType((*SrpPongFrame)(nil), "SrpPongFrame")
	proto.RegisterType((*SrpOpenFrame)(nil), "SrpOpenFrame")
	proto.RegisterType((*SrpOpenRspFrame)(nil), "SrpOpenRspFrame")
	proto.RegisterType((*SrpCloseFrame)(nil), "SrpCloseFrame")
	proto.RegisterType((*SrpDataFrame)(nil), "SrpDataFrame")
	proto.RegisterType((*SrpFrame)(nil), "SrpFrame")
}

func init() { proto.RegisterFile("frp.proto", fileDescriptor_d316925312aba732) }

var fileDescriptor_d316925312aba732 = []byte{
	// 449 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xcf, 0x8f, 0x93, 0x40,
	0x14, 0xc7, 0x2d, 0xa5, 0x14, 0x5e, 0x7f, 0x38, 0xce, 0xc1, 0x10, 0x0f, 0xba, 0xe1, 0xb4, 0x89,
	0x09, 0x87, 0xd5, 0xe8, 0x79, 0xed, 0xd6, 0x66, 0x93, 0x06, 0xc8, 0x63, 0x2f, 0x7a, 0x31, 0xb8,
	0xc5, 0x86, 0xa4, 0x74, 0x26, 0x03, 0x17, 0xff, 0x0d, 0xff, 0x62, 0x33, 0x0f, 0x86, 0x61, 0xeb,
	0xc6, 0xdb, 0x97, 0xbe, 0xcf, 0xbc, 0x5f, 0xdf, 0x57, 0x08, 0x7e, 0x29, 0x19, 0x4b, 0x25, 0x5a,
	0x11, 0x6d, 0x60, 0x95, 0x2b, 0xb9, 0x17, 0xc7, 0xea, 0xfc, 0x55, 0x15, 0x75, 0xc9, 0x5f, 0x83,
	0xa7, 0xca, 0x5a, 0xb4, 0x65, 0x38, 0xb9, 0x9a, 0x5c, 0x07, 0xd8, 0x7f, 0xf1, 0x37, 0xe0, 0x3f,
	0x8a, 0x5a, 0xaa, 0xb2, 0x69, 0x42, 0xe7, 0x6a, 0x72, 0x3d, 0xc3, 0xe1, 0x3b, 0xfa, 0x04, 0xcc,
	0x24, 0xc1, 0x46, 0x76, 0x79, 0x18, 0x4c, 0x55, 0xd9, 0x52, 0x12, 0x1f, 0xb5, 0xd4, 0xbf, 0xd4,
	0xcd, 0x91, 0x1e, 0x07, 0xa8, 0x65, 0x14, 0xc1, 0x32, 0x57, 0x32, 0xab, 0xce, 0xc7, 0xee, 0x0d,
	0x07, 0xb7, 0xad, 0xea, 0xae, 0xf2, 0x14, 0x49, 0x1b, 0x46, 0xfc, 0x8f, 0x79, 0x4b, 0x4c, 0x2a,
	0xcb, 0x7e, 0x86, 0x35, 0x38, 0xd5, 0xa1, 0xef, 0xdf, 0xa9, 0x0e, 0xd1, 0x16, 0x5e, 0xf6, 0xf1,
	0xa1, 0xbd, 0x0b, 0xc4, 0xb4, 0xeb, 0xfc, 0xd3, 0xee, 0xd4, 0xb6, 0xfb, 0x8e, 0x76, 0xb5, 0x39,
	0x89, 0xa6, 0x7c, 0xbe, 0x4e, 0x42, 0x7d, 0xdc, 0x15, 0x6d, 0xf1, 0x7c, 0x91, 0xcb, 0x1d, 0xfa,
	0x76, 0x87, 0x7a, 0xae, 0x43, 0xd1, 0x16, 0x54, 0x6f, 0x89, 0xa4, 0xa3, 0x3f, 0x2e, 0xf8, 0xb9,
	0xea, 0x3b, 0x8e, 0xc0, 0x6d, 0x7f, 0xcb, 0x6e, 0xf0, 0xf5, 0xcd, 0x3a, 0x36, 0x81, 0xf8, 0xe1,
	0x5b, 0xb6, 0x45, 0x8a, 0xf1, 0x18, 0xe0, 0x34, 0x58, 0x49, 0x25, 0x16, 0x1d, 0x69, 0x0d, 0xc6,
	0x11, 0xc1, 0x3f, 0xc3, 0xea, 0x34, 0x76, 0x8d, 0xaa, 0x2f, 0x6e, 0x5e, 0xc5, 0x97, 0x76, 0xe2,
	0x53, 0x8e, 0xbf, 0x87, 0xe0, 0x60, 0xc6, 0x0c, 0x5d, 0x7a, 0xb4, 0x8a, 0xc7, 0xb3, 0xa3, 0x8d,
	0x6b, 0x58, 0x1a, 0x8f, 0xc3, 0x99, 0x85, 0x07, 0xe3, 0xd1, 0xc6, 0x09, 0x36, 0x66, 0x87, 0xde,
	0x08, 0x16, 0x16, 0x16, 0x23, 0x58, 0x18, 0xd7, 0xc3, 0xb9, 0x85, 0x87, 0x53, 0x40, 0x1b, 0xe7,
	0x1f, 0x61, 0x29, 0x46, 0x27, 0x10, 0xfa, 0xc4, 0xb3, 0xf8, 0xe2, 0x34, 0xf0, 0x09, 0xa5, 0x57,
	0xfa, 0x38, 0x38, 0x1e, 0x06, 0x76, 0xa5, 0xf6, 0x0e, 0x70, 0x44, 0x44, 0x3f, 0xc0, 0xd5, 0x86,
	0xf0, 0x00, 0x66, 0xfb, 0x74, 0x77, 0x9f, 0xb0, 0x17, 0x7c, 0x09, 0x3e, 0x49, 0xcc, 0x33, 0x36,
	0xe1, 0x3e, 0xb8, 0x77, 0xb7, 0x0f, 0xb7, 0xcc, 0xd1, 0x2a, 0xbb, 0x4f, 0x76, 0x6c, 0x4a, 0x2a,
	0x4d, 0x76, 0xcc, 0xd5, 0x2a, 0xcd, 0xb6, 0x09, 0x9b, 0xf1, 0x05, 0xcc, 0xb5, 0xd2, 0x8f, 0x3c,
	0x9d, 0x6d, 0xb3, 0x4f, 0xf3, 0x2d, 0x9b, 0x7f, 0xf1, 0xbe, 0xbb, 0x75, 0x51, 0x9d, 0x7f, 0x7a,
	0xf4, 0x07, 0xfe, 0xf0, 0x37, 0x00, 0x00, 0xff, 0xff, 0xac, 0x36, 0xf4, 0xd6, 0xcd, 0x03, 0x00,
	0x00,
}
